import java.util.HashMap;
import java.util.Map;


public class Robot {
	private int x;
	private int y;
	private String direction;
	
	// Initializer (0,0,N)
	public Robot() {
		x = 0;
		y = 0;
		direction = "N";
	}
	

    // Return a JSON String pattern with the Position Data
	public String position() {
        return "{\"robotMars\":\n"
        		+ "   {\"x\" : " + x +",\n"
        		+ "    \"y\" : " + y +",\n"
        		+ "    \"direction\" : \"" + DirectionName() +"\"\n" 
        		+ "   }\n"
        		+ "}\n";
       
    }

	// Get the direction
	public String getDir() {
		return direction;
	}
	
	// Update the direction
	private void setDirection(String value){
		direction = value;
	}
	
	// Send a Human readable string for the Direction
    private String DirectionName() {
        // Create a dictionary
        Map<String, String> map = new HashMap<String, String>();
        
        map.put("N", "North");
        map.put("S", "South");
        map.put("W", "West");
        map.put("E", "East");

        return map.get(direction);

    }
    
    // Make the robot turn to left updating where it is facing
    private void turnLeft() {
        switch (getDir()) {
            case "N":
            	setDirection("W");
                break;
            case "W": 
            	setDirection("S");
                break;
            case "S":
            	setDirection("E");
                break;
            case "E":
            	setDirection("N");
                break;
        }
    }
    
    // Make the robot turn right updating where it is facing
    private void turnRight() {
        switch (getDir()) {
            case "N":
            	setDirection("E");
                break;
            case "E": 
            	setDirection("S");
                break;
            case "S":
            	setDirection("W");
                break;
            case "W":
            	setDirection("N");
                break;
        }
    }
    
    // Make it move if it can
	public void move() {
        switch (direction) {
            case "N":
            if (y < 5) {
                y++;
            }
            break;
        case "S": 
            if (y > 0) {
                y--;
            }
            break;
        case "E":
            if (x < 5) {
                x++;
            }
            break;
        case "W":
            if (x > 0) {
                x--;
            }
            break;
        }	
	}
}
